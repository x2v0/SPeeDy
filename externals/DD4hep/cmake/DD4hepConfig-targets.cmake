# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.17)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget DD4hep::listcomponents DD4hep::DD4hepGaudiPluginMgr DD4hep::DDParsers DD4hep::DDCore DD4hep::DDCorePlugins DD4hep::DDGDMLPlugins DD4hep::DDPythonPlugins DD4hep::DDRec DD4hep::DDRecPlugins DD4hep::DDDetectors DD4hep::DDCond DD4hep::DDCondPlugins DD4hep::DDAlign DD4hep::DDAlignPlugins DD4hep::DDCAD DD4hep::DDCADPlugins DD4hep::DDDigi DD4hep::DDDigiPlugins DD4hep::ddeve DD4hep::DDEvePlugins DD4hep::DDEve_Interface DD4hep::geoDisplay DD4hep::geoConverter DD4hep::geoPluginRun DD4hep::dumpBfield DD4hep::print_materials DD4hep::materialScan DD4hep::materialBudget DD4hep::graphicalScan DD4hep::teveDisplay DD4hep::geoWebDisplay DD4hep::test_surfaces DD4hep::test_cellid_position_converter DD4hep::teveLCIO)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target DD4hep::listcomponents
add_executable(DD4hep::listcomponents IMPORTED)

# Create imported target DD4hep::DD4hepGaudiPluginMgr
add_library(DD4hep::DD4hepGaudiPluginMgr SHARED IMPORTED)

set_target_properties(DD4hep::DD4hepGaudiPluginMgr PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "Gaudi=DD4hep_Flavor"
  INTERFACE_LINK_LIBRARIES "Boost::boost;stdc++fs;dl"
)

# Create imported target DD4hep::DDParsers
add_library(DD4hep::DDParsers SHARED IMPORTED)

set_target_properties(DD4hep::DDParsers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "BOOST_SPIRIT_USE_PHOENIX_V3;DD4HEP_USE_GEANT4_UNITS=1"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "ROOT::Core;ROOT::GenVector;Boost::boost;XercesC::XercesC"
)

# Create imported target DD4hep::DDCore
add_library(DD4hep::DDCore SHARED IMPORTED)

set_target_properties(DD4hep::DDCore PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "DD4HEP_USE_TBB"
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "TBB::tbb;DD4hep::DDParsers;ROOT::Core;ROOT::Rint;ROOT::Tree;ROOT::Physics;ROOT::Geom;ROOT::GenVector;XercesC::XercesC;dl"
)

# Create imported target DD4hep::DDCorePlugins
add_library(DD4hep::DDCorePlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDCorePlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore"
)

# Create imported target DD4hep::DDGDMLPlugins
add_library(DD4hep::DDGDMLPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDGDMLPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore;ROOT::Core;ROOT::Gdml"
)

# Create imported target DD4hep::DDPythonPlugins
add_library(DD4hep::DDPythonPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDPythonPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore;ROOT::Core;ROOT::ROOTTPython"
)

# Create imported target DD4hep::DDRec
add_library(DD4hep::DDRec SHARED IMPORTED)

set_target_properties(DD4hep::DDRec PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore"
)

# Create imported target DD4hep::DDRecPlugins
add_library(DD4hep::DDRecPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDRecPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDRec"
)

# Create imported target DD4hep::DDDetectors
add_library(DD4hep::DDDetectors SHARED IMPORTED)

set_target_properties(DD4hep::DDDetectors PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDRec"
)

# Create imported target DD4hep::DDCond
add_library(DD4hep::DDCond SHARED IMPORTED)

set_target_properties(DD4hep::DDCond PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore"
)

# Create imported target DD4hep::DDCondPlugins
add_library(DD4hep::DDCondPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDCondPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCond"
)

# Create imported target DD4hep::DDAlign
add_library(DD4hep::DDAlign SHARED IMPORTED)

set_target_properties(DD4hep::DDAlign PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore"
)

# Create imported target DD4hep::DDAlignPlugins
add_library(DD4hep::DDAlignPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDAlignPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDAlign"
)

# Create imported target DD4hep::DDCAD
add_library(DD4hep::DDCAD SHARED IMPORTED)

set_target_properties(DD4hep::DDCAD PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore;assimp::assimp;ROOT::RCsg"
)

# Create imported target DD4hep::DDCADPlugins
add_library(DD4hep::DDCADPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDCADPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore;DD4hep::DDCAD"
)

# Create imported target DD4hep::DDDigi
add_library(DD4hep::DDDigi SHARED IMPORTED)

set_target_properties(DD4hep::DDDigi PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "DD4HEP_USE_TBB"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore;Boost::boost;ROOT::Core;ROOT::Geom;ROOT::GenVector;ROOT::RIO;TBB::tbb;TBB::tbbmalloc;TBB::tbbmalloc_proxy"
)

# Create imported target DD4hep::DDDigiPlugins
add_library(DD4hep::DDDigiPlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDDigiPlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDDigi"
)

# Create imported target DD4hep::ddeve
add_executable(DD4hep::ddeve IMPORTED)

# Create imported target DD4hep::DDEvePlugins
add_library(DD4hep::DDEvePlugins SHARED IMPORTED)

set_target_properties(DD4hep::DDEvePlugins PROPERTIES
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCore;DD4hep::DDEve_Interface;LCIO::LCIO;ROOT::ROOTEve"
)

# Create imported target DD4hep::DDEve_Interface
add_library(DD4hep::DDEve_Interface INTERFACE IMPORTED)

set_target_properties(DD4hep::DDEve_Interface PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "ROOT::Core;ROOT::Rint;ROOT::Eve;ROOT::Gui;ROOT::Graf3d;ROOT::RGL;ROOT::EG"
)

# Create imported target DD4hep::geoDisplay
add_executable(DD4hep::geoDisplay IMPORTED)

# Create imported target DD4hep::geoConverter
add_executable(DD4hep::geoConverter IMPORTED)

# Create imported target DD4hep::geoPluginRun
add_executable(DD4hep::geoPluginRun IMPORTED)

# Create imported target DD4hep::dumpBfield
add_executable(DD4hep::dumpBfield IMPORTED)

# Create imported target DD4hep::print_materials
add_executable(DD4hep::print_materials IMPORTED)

# Create imported target DD4hep::materialScan
add_executable(DD4hep::materialScan IMPORTED)

# Create imported target DD4hep::materialBudget
add_executable(DD4hep::materialBudget IMPORTED)

# Create imported target DD4hep::graphicalScan
add_executable(DD4hep::graphicalScan IMPORTED)

# Create imported target DD4hep::teveDisplay
add_executable(DD4hep::teveDisplay IMPORTED)

# Create imported target DD4hep::geoWebDisplay
add_executable(DD4hep::geoWebDisplay IMPORTED)

# Create imported target DD4hep::test_surfaces
add_executable(DD4hep::test_surfaces IMPORTED)

# Create imported target DD4hep::test_cellid_position_converter
add_executable(DD4hep::test_cellid_position_converter IMPORTED)

# Create imported target DD4hep::teveLCIO
add_executable(DD4hep::teveLCIO IMPORTED)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/DD4hepConfig-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)

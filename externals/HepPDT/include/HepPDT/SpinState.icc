// ----------------------------------------------------------------------
//
// SpinState.icc
//
// ----------------------------------------------------------------------

#include <algorithm>  // swap()

namespace HepPDT {

SpinState::SpinState( double ts, double spin, double oam )
: itsTotalSpin ( ts ), 
  itsSpin      ( spin ),
  itsOrbAngMom ( oam )
{ ; }

SpinState::SpinState( const SpinState & orig )
: itsTotalSpin  ( orig.itsTotalSpin ), 
  itsSpin       ( orig.itsSpin ),
  itsOrbAngMom  ( orig.itsOrbAngMom )
{ ; }

SpinState& SpinState::operator=( const SpinState & rhs )
{ 
  SpinState temp( rhs );
  swap( temp );
  return *this;
}

void SpinState::swap( SpinState & other )  {
  std::swap( itsTotalSpin, other.itsTotalSpin );
  std::swap( itsSpin     , other.itsSpin );
  std::swap( itsOrbAngMom, other.itsOrbAngMom );
}

bool SpinState::operator==( const SpinState & rhs ) const
{ 
  if( (itsTotalSpin==rhs.itsTotalSpin) && (itsSpin==rhs.itsSpin) &&
      (itsOrbAngMom==rhs.itsOrbAngMom) ) {
     return true;
  } else {
     return false;
  }
}

}	// HepPDT
